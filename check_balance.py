import os
import requests
import time
import hmac
import hashlib

# –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_KEY = os.getenv("API_KEY")
API_SECRET = os.getenv("API_SECRET")
BASE_URL = "https://api.bybit.com"  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ –Ω–µ testnet

print("üîê API_KEY (–ø–µ—Ä–≤—ã–µ 6 —Å–∏–º–≤–æ–ª–æ–≤):", API_KEY[:6])
print("üîê API_SECRET (–ø–µ—Ä–≤—ã–µ 6 —Å–∏–º–≤–æ–ª–æ–≤):", API_SECRET[:6])

def get_timestamp():
    return str(int(time.time() * 1000))

def sign(params: dict) -> str:
    ordered_params = "&".join([f"{k}={v}" for k, v in sorted(params.items())])
    return hmac.new(
        bytes(API_SECRET, "utf-8"),
        bytes(ordered_params, "utf-8"),
        hashlib.sha256,
    ).hexdigest()

def get_spot_balance():
    endpoint = "/v5/account/wallet-balance"
    url = BASE_URL + endpoint
    timestamp = get_timestamp()

    params = {
        "accountType": "SPOT",
        "timestamp": timestamp,
    }

    signature = sign(params)

    headers = {
        "X-BYBIT-API-KEY": API_KEY,
        "X-BYBIT-SIGN": signature,
        "X-BYBIT-TIMESTAMP": timestamp,
    }

    response = requests.get(url, headers=headers, params=params)

    print("üîµ Raw response text (SPOT):", response.text)
    print("üîµ Status code (SPOT):", response.status_code)

    try:
        return response.json()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON (SPOT):", str(e))
        return {"error": response.text}

def get_futures_balance():
    endpoint = "/v5/account/wallet-balance"
    url = BASE_URL + endpoint
    timestamp = get_timestamp()

    params = {
        "accountType": "UNIFIED",  # Unified account (–¥–ª—è —Ñ—å—é—á–µ—Ä—Å–æ–≤ USDT)
        "timestamp": timestamp,
    }

    signature = sign(params)

    headers = {
        "X-BYBIT-API-KEY": API_KEY,
        "X-BYBIT-SIGN": signature,
        "X-BYBIT-TIMESTAMP": timestamp,
    }

    response = requests.get(url, headers=headers, params=params)

    print("üîµ Raw response text (FUTURES):", response.text)
    print("üîµ Status code (FUTURES):", response.status_code)

    try:
        return response.json()
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON (FUTURES):", str(e))
        return {"error": response.text}

# –ó–∞–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ SPOT:")
    response = get_spot_balance()
    print("üîß –û—Ç–≤–µ—Ç –æ—Ç API SPOT:", response)

    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ FUTURES (Unified):")
    response = get_futures_balance()
    print("üîß –û—Ç–≤–µ—Ç –æ—Ç API FUTURES:", response)
