import asyncio
import json
import os
import websockets
from aiohttp import web
from trade_simulator import TradeSimulator
from telegram_notifier import send_telegram_message

simulator = TradeSimulator()

# ‚úÖ WebSocket –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Bybit
async def connect():
    uri = "wss://stream.bybit.com/v5/public/spot"
    async with websockets.connect(uri) as websocket:
        await websocket.send(json.dumps({
            "op": "subscribe",
            "args": [
                "publicTrade.BTCUSDT",
                "publicTrade.ETHUSDT",
                "publicTrade.XRPUSDT",
                "publicTrade.SOLUSDT",
                "publicTrade.ADAUSDT",
                "publicTrade.AVAXUSDT"
            ]
        }))
        print("‚úÖ WebSocket –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

        while True:
            try:
                message = json.loads(await websocket.recv())
                signal = simulator.process(message)
                if signal:
                    report = simulator.simulate_trade(signal)
                    if report:
                        await send_telegram_message(report)
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ WebSocket:", e)
                await asyncio.sleep(5)

# ‚úÖ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–Ø –∂–∏–≤"
async def send_heartbeat():
    while True:
        await send_telegram_message("‚úÖ –Ø –∂–∏–≤. –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")
        await asyncio.sleep(600)

# ‚úÖ HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Railway ("/" ‚Üí OK)
async def handle(request):
    return web.Response(text="‚úÖ Bot is running")

async def start_server():
    app = web.Application()
    app.router.add_get("/", handle)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, port=8000)
    await site.start()
    print("üåê HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")

# ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞
async def main():
    print("üöÄ main.py –∑–∞–ø—É—â–µ–Ω")
    await start_server()
    asyncio.create_task(send_heartbeat())
    await connect()  # –≥–ª–∞–≤–Ω—ã–π –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å ‚Äî –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ

if __name__ == "__main__":
    asyncio.run(main())
