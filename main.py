import asyncio
import json
import websockets
from trade_simulator import TradeSimulator
from telegram_notifier import send_telegram_message

simulator = TradeSimulator()

# üîÅ –ü—É–ª—å—Å —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç
async def heartbeat():
    while True:
        try:
            await send_telegram_message("ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Ä—ã–Ω–æ–∫...")
            print("üíì Heartbeat –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        except Exception as e:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ heartbeat:", e)
        await asyncio.sleep(600)  # 10 –º–∏–Ω—É—Ç

# üì° –û—Å–Ω–æ–≤–Ω–æ–π WebSocket-–ø—Ä–æ—Ü–µ—Å—Å
async def run_bot():
    uri = "wss://stream.bybit.com/v5/public/spot"
    while True:
        try:
            print("üîå –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ WebSocket...")
            async with websockets.connect(uri) as websocket:
                await websocket.send(json.dumps({
                    "op": "subscribe",
                    "args": [
                        "publicTrade.BTCUSDT",
                        "publicTrade.ETHUSDT",
                        "publicTrade.XRPUSDT",
                        "publicTrade.SOLUSDT",
                        "publicTrade.ADAUSDT",
                        "publicTrade.AVAXUSDT"
                    ]
                }))
                print("‚úÖ WebSocket –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

                while True:
                    try:
                        response = await websocket.recv()
                        message = json.loads(response)

                        if message.get("type") == "snapshot":
                            continue

                        signal = simulator.process(message)
                        if signal:
                            report = simulator.simulate_trade(signal)
                            if report:
                                await send_telegram_message(report)

                    except websockets.ConnectionClosed:
                        print("üîÅ WebSocket –æ—Ç–∫–ª—é—á—ë–Ω. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
                        break
                    except Exception as e:
                        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)
                        await asyncio.sleep(3)
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket:", e)
            await asyncio.sleep(10)

# üß† –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    loop.create_task(run_bot())
    loop.create_task(heartbeat())  # üíì –î–æ–±–∞–≤–ª—è–µ–º –ø—É–ª—å—Å!
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π...")
    loop.run_forever()
