from fastapi import FastAPI
import asyncio
import logging

from main import connect  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º WebSocket-—Ü–∏–∫–ª

app = FastAPI()
logging.basicConfig(level=logging.INFO)


@app.on_event("startup")
async def startup_event():
    logging.info("‚è≥ WebSocket –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
    await asyncio.sleep(2)

    # –ó–∞–ø—É—Å–∫–∞–µ–º connect –≤ —Ñ–æ–Ω–µ
    asyncio.create_task(connect())

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    asyncio.create_task(stop_server_after_delay())


async def stop_server_after_delay():
    await asyncio.sleep(120)
    logging.info("üõë –í—Ä–µ–º—è –≤—ã—à–ª–æ. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É.")
    raise KeyboardInterrupt("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã.")


@app.get("/")
async def root():
    return {"message": "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. WebSocket –∞–∫—Ç–∏–≤–µ–Ω."}
