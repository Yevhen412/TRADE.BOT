import aiohttp
from aiohttp import web
import asyncio
import os
from dotenv import load_dotenv
load_dotenv()
import json

from websocket_client import run_session
from telegram_notifier import send_telegram_message

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")

routes = web.RouteTableDef()

@routes.post(f'/{WEBHOOK_SECRET}')
async def handle(request):
    try:
        print("‚ö†Ô∏è Webhook –ø–æ–ª—É—á–µ–Ω!")  # –õ–æ–≥
        data = await request.json()
        print("üçë –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:", data)  # –õ–æ–≥

        message = data.get("message", {})
        text = message.get("text", "")
        chat_id = message.get("chat", {}).get("id")

        if text == "/start":
            await send_telegram_message("üü¢ –ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞. –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Å—Å–∏—é...", chat_id)
            await run_session(duration_seconds=120)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ webhook –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:", e)
    return web.Response(text="OK")

app = web.Application()
app.add_routes(routes)

if __name__ == "__main__":
    print(f"üöÄ –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø—É—Ç—å: /{WEBHOOK_SECRET}")
    web.run_app(app, host="0.0.0.0", port=8080)
