import asyncio
from aiogram import Bot, Dispatcher, types, executor
from websocket_client import connect_websocket
from telegram_notifier import send_telegram_message

import os
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ 2 –º–∏–Ω—É—Ç—ã‚Ä¶")
    asyncio.create_task(run_session())

async def run_session():
    try:
        print("üîÅ –°—Ç–∞—Ä—Ç—É—é —Å–µ—Å—Å–∏—é WebSocket –Ω–∞ 2 –º–∏–Ω—É—Ç—ã")
        await send_telegram_message("üîÅ –°–µ—Å—Å–∏—è WebSocket —Å—Ç–∞—Ä—Ç—É–µ—Ç")
        await connect_websocket(duration_seconds=120)
        await send_telegram_message("‚èπÔ∏è –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ run_session:", e)
        await send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
