import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.utils import executor
import os

from websocket_client import connect_websocket

BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

active_session = False

@dp.message_handler(commands=["start"])
async def handle_start(message: Message):
    global active_session

    if str(message.chat.id) != str(CHAT_ID):
        await message.answer("‚õîÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return

    if active_session:
        await message.answer("‚ö†Ô∏è –°–µ—Å—Å–∏—è —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞.")
        return

    active_session = True
    await message.answer("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏...")
    try:
        await connect_websocket(duration_seconds=120)
    except Exception as e:
        await message.answer(f"[ERROR] {e}")
    finally:
        active_session = False
        await message.answer("üõë –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
