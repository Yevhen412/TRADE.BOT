import asyncio
import os
from dotenv import load_dotenv
from trade_simulator import TradeSimulator
from telegram_notifier import send_telegram_message

load_dotenv()

BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

simulator = TradeSimulator()
is_session_running = False

async def handle_start():
    global is_session_running
    is_session_running = True

    await send_telegram_message("‚úÖ –°–µ—Å—Å–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ 2 –º–∏–Ω—É—Ç—ã‚Ä¶")

    # –§–∏–∫—Ç–∏–≤–Ω–∞—è —Å–¥–µ–ª–∫–∞
    trade = simulator.simulate_trade(None)
    await send_telegram_message(
        f"üü¢ –§–∏–∫—Ç–∏–≤–Ω–∞—è —Å–¥–µ–ª–∫–∞: –í—Ö–æ–¥ {trade['entry']}, –í—ã—Ö–æ–¥ {trade['exit']}, –ü—Ä–∏–±—ã–ª—å: {trade['pnl']:.2f} USDT"
    )

    await asyncio.sleep(120)

    # –û—Ç—á—ë—Ç –ø–æ —Å–µ—Å—Å–∏–∏
    report = simulator.get_session_pnl_report()
    await send_telegram_message(f"üìä –ò—Ç–æ–≥ —Å–µ—Å—Å–∏–∏:\n{report}")
    is_session_running = False

async def polling_loop():
    import httpx

    API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"
    offset = None

    while True:
        try:
            async with httpx.AsyncClient() as client:
                resp = await client.get(f"{API_URL}/getUpdates", params={"offset": offset})
                updates = resp.json().get("result", [])
                for update in updates:
                    offset = update["update_id"] + 1
                    msg = update.get("message", {})
                    chat_id = str(msg.get("chat", {}).get("id", ""))
                    text = msg.get("text", "")

                    if chat_id == CHAT_ID and text == "/start":
                        if is_session_running:
                            await send_telegram_message("‚è≥ –£–∂–µ –∏–¥—ë—Ç —Å–µ—Å—Å–∏—è‚Ä¶")
                        else:
                            asyncio.create_task(handle_start())

        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ polling:", e)

        await asyncio.sleep(2)

if __name__ == "__main__":
    asyncio.run(polling_loop())
