import asyncio
import aiohttp
import os

# –ò–º–ø–æ—Ä—Ç —Å–∏–º—É–ª—è—Ç–æ—Ä–∞, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
from trade_simulator import TradeSimulator

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –æ—á–∏—â–∞–µ–º –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ =
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "").strip().lstrip("=")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID", "").strip()

simulator = TradeSimulator()  # –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

async def send_telegram_message(text: str):
    print("üü° [DEBUG] –í—ã–∑–≤–∞–Ω–∞ send_telegram_message()")

    if not BOT_TOKEN or not CHAT_ID:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∑–∞–¥–∞–Ω—ã!")
        print(f"[DEBUG] BOT_TOKEN: '{BOT_TOKEN}'")
        print(f"[DEBUG] CHAT_ID: '{CHAT_ID}'")
        return

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": text,
        "parse_mode": "HTML"
    }

    # –û—Ç–ª–∞–¥–∫–∞
    print(f"[DEBUG] BOT_TOKEN: '{BOT_TOKEN}'")
    print(f"[DEBUG] CHAT_ID: '{CHAT_ID}'")
    print(f"[DEBUG] URL: {url}")
    print(f"[DEBUG] PAYLOAD: {payload}")

    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(url, data=payload) as response:
                response_text = await response.text()
                print("üì© –û—Ç–≤–µ—Ç Telegram:", response.status, response_text)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", str(e))


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    asyncio.run(send_telegram_message("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"))
